name: Deploy Frontend
on:   
  workflow_run:
    workflows: ["Deploy Infrastructure"]
    branches: [main]
    types: [completed]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: "eu-north-1"

    steps:
      - uses: actions/checkout@v4

      # - name: Download Terraform Outputs
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: terraform-outputs
      #     path: ./terraform-outputs

      # - name: Debug Terraform Outputs
      #   run: |
      #     echo "S3_BUCKET_NAME: $(cat ./terraform-outputs/s3_bucket_name.txt)"
      #     echo "CloudFront Distribution ID: $(cat ./terraform-outputs/distribution_id.txt)"
      #     echo "CloudFront URL: $(cat ./terraform-outputs/cloudfront_url.txt)"
      - name: Get SSM Parameters
        id: ssm
        run: |
          echo "S3_BUCKET=$(aws ssm get-parameter --name '/app/s3-bucket' --query 'Parameter.Value' --output text)" >> $GITHUB_ENV
          echo "CF_ID=$(aws ssm get-parameter --name '/app/cf-id' --query 'Parameter.Value' --output text)" >> $GITHUB_ENV

      - name: Debug Terraform Outputs
        run: |
          echo "S3_BUCKET_NAME: $S3_BUCKET"
          echo "CloudFront Distribution ID: $CF_ID"

      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set region $AWS_DEFAULT_REGION

      - name: Install and Build
        run: |
          npm ci
          npm run build

      - name: Deploy to S3
        run: |
          # Upload static assets with long cache
          aws s3 sync ./dist s3://$S3_BUCKET \
            --delete \
            --cache-control "public, max-age=31536000, immutable" \
            --exclude "*.html" \
            --exclude "*.json"
          
          # Upload HTML files with no cache
          aws s3 sync ./dist s3://$S3_BUCKET \
            --delete \
            --cache-control "public, max-age=0, must-revalidate" \
            --exclude "*" \
            --include "*.html" \
            --include "*.json"

      - name: Invalidate CloudFront Cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id $CF_ID \
            --paths "/*"
