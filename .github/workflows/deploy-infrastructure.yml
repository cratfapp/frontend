name: Deploy Infrastructure
on:
  push:
    branches: [ "main" ]
    paths:
      - 'terraform/**'  # Only run when Terraform files change
      - '.github/workflows/deploy-infrastructure.yml'  # Or when this workflow changes

jobs:
  terraform:
    runs-on: ubuntu-latest
    
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: "eu-north-1"

    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        
      - name: Terraform Init
        run: |
          cd ./terraform
          terraform init -input=false
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform Plan
        run: |
          cd ./terraform
          terraform plan -input=false -out=tfplan
        env:
          TF_VAR_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          TF_VAR_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform Apply
        run: |
          cd ./terraform
          terraform apply -input=false -auto-approve tfplan
        env:
          TF_VAR_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          TF_VAR_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # Output the CloudFront distribution ID for the frontend deployment
      - name: Get Terraform Outputs
        id: tf-outputs
        run: |
          # Navigate to Terraform directory (if needed)
          if [ -d "./terraform" ]; then
            cd ./terraform
          fi
          
          # Get outputs using JSON format for reliability
          OUTPUT_JSON=$(terraform output -json)
          
          # Extract values using jq
          DISTRIBUTION_ID=$(echo "$OUTPUT_JSON" | jq -r '.cloudfront_distribution_id.value')
          S3_BUCKET=$(echo "$OUTPUT_JSON" | jq -r '.s3_bucket_name.value')
          
          # Verify outputs
          if [ -z "$DISTRIBUTION_ID" ] || [ -z "$S3_BUCKET" ]; then
            echo "::error::Missing required Terraform outputs"
            echo "Available outputs:"
            terraform output
            exit 1
          fi
          
          # Set GitHub outputs
          echo "distribution_id=$DISTRIBUTION_ID" >> $GITHUB_OUTPUT
          echo "s3_bucket=$S3_BUCKET" >> $GITHUB_OUTPUT
          
          # Set environment variables
          echo "DISTRIBUTION_ID=$DISTRIBUTION_ID" >> $GITHUB_ENV
          echo "S3_BUCKET=$S3_BUCKET" >> $GITHUB_ENV
          
          # Debug output
          echo "Successfully retrieved outputs:"
          echo "CloudFront Distribution ID: $DISTRIBUTION_ID"
          echo "S3 Bucket Name: $S3_BUCKET"
        shell: bash
