name: Deploy Infrastructure
on:
  push:
    branches: [ "main" ]
    paths:
      - 'terraform/**'  # Only run when Terraform files change
      - '.github/workflows/deploy-infrastructure.yml'  # Or when this workflow changes

jobs:
  terraform:
    runs-on: ubuntu-latest
    
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: "eu-north-1"

    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        
      - name: Terraform Init
        run: |
          cd ./terraform
          terraform init -input=false
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform Plan
        run: |
          cd ./terraform
          terraform plan -input=false -out=tfplan
        env:
          TF_VAR_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          TF_VAR_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform Apply
        run: |
          cd ./terraform
          terraform apply -input=false -auto-approve tfplan
        env:
          TF_VAR_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          TF_VAR_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # Output the CloudFront distribution ID for the frontend deployment
      - name: Get Terraform Outputs
        id: tf-outputs
        run: |
          # Change to your Terraform directory if needed
          cd ./terraform || true
          
          # Get outputs with error handling
          DISTRIBUTION_ID=$(terraform output -raw cloudfront_distribution_id 2>/dev/null | tr -d '\n')
          S3_BUCKET=$(terraform output -raw s3_bucket_name 2>/dev/null | tr -d '\n')
          
          # Verify outputs exist
          if [ -z "$DISTRIBUTION_ID" ] || [ -z "$S3_BUCKET" ]; then
            echo "::error::Failed to get Terraform outputs"
            exit 1
          fi
          
          # Set GitHub outputs and environment variables
          echo "distribution_id=$DISTRIBUTION_ID" >> $GITHUB_OUTPUT
          echo "s3_bucket=$S3_BUCKET" >> $GITHUB_OUTPUT
          echo "DISTRIBUTION_ID=$DISTRIBUTION_ID" >> $GITHUB_ENV
          echo "S3_BUCKET=$S3_BUCKET" >> $GITHUB_ENV
        shell: bash
