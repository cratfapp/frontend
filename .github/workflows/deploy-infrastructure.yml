name: Deploy Infrastructure
on:
  push:
    branches: [ "main" ]
    paths:
      - 'terraform/**'  # Only run when Terraform files change
      - '.github/workflows/deploy-infrastructure.yml'  # Or when this workflow changes

jobs:
  terraform:
    runs-on: ubuntu-latest
    
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: "eu-north-1"

    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        
      - name: Terraform Init
        run: |
          cd ./terraform
          terraform init -input=false
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform Plan
        run: |
          cd ./terraform
          terraform plan -input=false -out=tfplan
        env:
          TF_VAR_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          TF_VAR_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform Apply
        run: |
          cd ./terraform
          terraform apply -input=false -auto-approve tfplan
        env:
          TF_VAR_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          TF_VAR_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # Output the CloudFront distribution ID for the frontend deployment
      - name: Save Outputs to File
        run: |
          terraform output -json > outputs.json
          echo '{
            "CLOUDFRONT_ID": "$(terraform output -raw cloudfront_distribution_id)",
            "CLOUDFRONT_URL": "$(terraform output -raw cloudfront_url)"
          }' > outputs.env
        shell: bash
      
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: terraform-outputs
          path: |
            outputs.json
            outputs.env
